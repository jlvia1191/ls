lsm <- function(x, ...) UseMethod("lsm")
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
print.lsm  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
j <- lsm(CHD ~ AGE , data);j
attributes(j)
objects()
a <-objects()
a
rm(a)
a
objects()
rm(list(a))
a
objects()
a <-objects()
a
rm(list(a))
install_github("jlvia1191/ls")
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
j <- lsm(CHD ~ AGE , data);j
attributes(j)
lsm
y <- as.factor(c(1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1))
x1 <-	as.factor(c(2, 2, 2, 5, 5, 5, 5, 8, 8, 11, 11, 11))
x2 <-	as.factor(c(3, 3, 3, 6, 6, 6, 6, 9, 9, 12, 12, 12))
x3 <-	as.factor(c(4, 4, 4, 7, 7, 7, 7, 10, 10, 13, 13, 13))
x4 <-	as.factor(c(1, 1, 1, 9, 9, 9, 9, 4, 4, 2, 2, 2))
x5 <-	as.factor(c(5, 5, 5, 6, 6, 6, 6, 7, 7, 8, 8, 8))
data <- data.frame (y, x1, x2, x3, x4, x5)
lsm(y ~ x1 + x2 + x3 + x4 + x5, data)
library("lsm", lib.loc="~/R/win-library/3.4")
y <- as.factor(c(1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1))
x1 <-	as.factor(c(2, 2, 2, 5, 5, 5, 5, 8, 8, 11, 11, 11))
x2 <-	as.factor(c(3, 3, 3, 6, 6, 6, 6, 9, 9, 12, 12, 12))
x3 <-	as.factor(c(4, 4, 4, 7, 7, 7, 7, 10, 10, 13, 13, 13))
x4 <-	as.factor(c(1, 1, 1, 9, 9, 9, 9, 4, 4, 2, 2, 2))
x5 <-	as.factor(c(5, 5, 5, 6, 6, 6, 6, 7, 7, 8, 8, 8))
data <- data.frame (y, x1, x2, x3, x4, x5)
lsm(y ~ x1 + x2 + x3 + x4 + x5, data)
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
ls
lsm
lsm.default
lsm2
ls(environment(j))
j <- lsm(CHD ~ AGE , data);j
attributes(j)
class(j)
ls(environment(j))
rm(list=ls())
a
rm(list=objects())
objects()
ls
system.date()
methods(class="data.frame")
methods(plot)
plot.default
plot.lm*
plot.lm
plot.lm*
plot.lm*
plot.lm*
methods(summary)
methods(summary)
summary.glm
summary.lm
lsm <- function(formula , data )
{
UseMethod("lsm", x)
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
print.lsm  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
lsm <- function(formula , data )
{
UseMethod("lsm", formula , data)
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
print.lsm  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
j <- lsm(CHD ~ AGE , data);j
lsm <- function(formula , data )
{
UseMethod("lsm", formula )
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
print.lsm  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
?getAnywhere
methods(lm)
methods(glm)
getAnywhere(lm)
getAnywhere(glm)
getAnywhere(lsm)
?InternalMethods.
?InternalMethods
getAnywhere(lsm)
baz <- function(x) UseMethod("baz", x)
baz.A <- function(x) "A"
baz.B <- function(x) "B"
ab <- structure(1, class = c("A", "B"))
ba <- structure(1, class = c("B", "A"))
baz(ab)
baz(ba)
class(baz(ab))
print
getAnywhere(print)
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
print.default  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
j <- lsm(CHD ~ AGE , data);j
attributes(j)
detach("package:lsm", unload=TRUE)
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
print.default  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
print.lsm  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
j <- lsm(CHD ~ AGE , data);j
lsm <- function(x, ...) UseMethod("lsm")
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
print.lsm  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
rm(list=objects())
objects()
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
print.lsm  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
j <- lsm(CHD ~ AGE , data);j
attributes(j)
class(j)
ls(environment(j))
class(ls)
ls
lsm
library("lsm", lib.loc="~/R/win-library/3.4")
remove.packages("aplpack", lib="~/R/win-library/3.4")
library("lsm", lib.loc="~/R/win-library/3.4")
remove.packages("lsm", lib="~/R/win-library/3.4")
?gam
?gam
example("UseMethod")
example(UseMethod)
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
lsm <- function(x, ...) UseMethod("lsm")
lsm.default <- function(formula , data)
{
est <- ls(formula , data)
est$call <- match.call()
class(est) <- "lsm"
est
}
print.lsm  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
print.lsm  <- function(x, ...)
{
cat("\nCall:\n")
print(x$call)
cat("\nLog_Likelihood: \n")
print(x$log_Likelihood)
cat("\nPopulations: \n")
print(x$populations)
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
j <- lsm(CHD ~ AGE , data);j
attributes(j)
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj; Vj <- nj*vj; V <- diag(vj);sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
lsm(CHD ~ AGE , data)
install_github("jlvia1191/ls")
library("lsm", lib.loc="~/R/win-library/3.4")
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
j <- lsm(CHD ~ AGE , data);j
rm(list=objects())
objects()
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
detach("package:lsm", unload=TRUE)
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj;
Vj <- nj*vj;
V <- diag(vj);colnames(V) <- rownames(Vj) <- colnames(Vj);
sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
rm(list=objects())
objects()
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj;
Vj <- nj*vj;
V <- diag(vj);colnames(V) <- rownames(Vj) <- colnames(Vj);
sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
j$V_j
j<- lsm(CHD ~ AGE , data);j
j$V_j
class(j$V_j)
names(j$V_j)
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj;
Vj <- nj*vj;
V <- diag(vj);colnames(V) <- names(Vj) <- names(Vj);
sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
mf <- model.frame(formula = formula, data = data)
lsm <- function(x, ...) UseMethod("lsm")
lsm <- function(formula , data )
{
mf <- model.frame(formula = formula, data = data)
res <-do.call(rbind, (tapply(as.vector(mf[, 1]), t(apply((mf[, -1,drop =FALSE]), 1, paste0,collapse = "-")),function(x) c(z = sum(as.numeric(x)), n = length(as.numeric(x)),p = mean(as.numeric(x))))))
zj<- res[, 1]; nj <- res[, 2]; pj <- res[, 3]; vj <- pj*(1-pj); mj <- nj*pj;
Vj <- nj*vj;
V <- diag(vj);colnames(V) <- names(Vj);rownames(V) <- names(Vj);
sp <- as.matrix((zj - nj * pj)/vj); ip <- diag(nj/vj); Zj <- (zj - nj*pj)/sqrt(nj*vj)
sj <- (res[, 1] * log(res[, 3]) + (res[, 2] - res[, 1]) * log(1 - res[, 3]))
Lj <-ifelse((res[, 3]) == 0 | (res[, 3]) == 1, 0, sj)
sat <- sum (Lj)
r<-list(log_Likelihood = sat, populations = length(res) / 3,z_j = as.matrix(zj), n_j = nj, p_j = pj, fitted.values = Lj, v_j = vj, m_j = as.matrix(mj), V_j = Vj, V = V, S_p = sp, I_p = ip, Zast_j = as.matrix(Zj))
r$call <- match.call()
class(r) <- "lsm"
r
}
AGE <- c(20,23,24,25,25,26,26,28,28,29,30,30,30,30,30,30,30,32,33,33)
CHD <- c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
data <- data.frame (CHD,  AGE )
lsm(CHD ~ AGE , data)
